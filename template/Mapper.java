package com.{{data.companyName}}.persistence.mapper;

import com.{{data.companyName}}.persistence.AbstractBaseMapper;
import com.{{data.companyName}}.persistence.bean.{{data.className}};
import com.{{data.companyName}}.vo.Pagination;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.annotations.Param;

{% for column in data.columns %}{% if column.isPri %}
public interface {{data.className}}Mapper extends AbstractBaseMapper<{{data.className}}, {{column.type}}> {
{% endif %}{% endfor %}
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {{data.tableName}}
     *
     * @mbggenerated
     */
    int insertSelective({{data.className}} record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {{data.tableName}}
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective({{data.className}} record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {{data.tableName}}
     *
     * @mbggenerated
     */
    {{data.className}} selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {{data.tableName}}
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {{data.tableName}}
     *
     * @mbggenerated
     */
    List<Map<String, Object>> queryByCondition(@Param("condition") Map<String, Object> conditionMap, @Param("pagination") Pagination pagination);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table {{data.tableName}}
     *
     * @mbggenerated
     */
    int countByCondition(@Param("condition") Map<String, Object> conditionMap);
}